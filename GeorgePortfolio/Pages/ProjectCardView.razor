@using GeorgePortfolio.Pages.ProjectsContent
<div id="modalOverlay" class="modal-overlay">
    <!-- Modal Content -->
    <div class="modal-window container d-flex flex-row justify-content-between"
         style="height: 90vh; padding-top: 20px; padding-bottom: 20px;">
        <button disabled="@(this.Idx == 1)" @onclick="() => Previous()" class="move-btn fa fa-arrow-left"></button>

        <div style="width: 100%; height: 100%; border-radius: 8px;">
            <div @onclick="() => CloseView()" class="closeicon fa fa-times"></div>
            @switch (this.ProjectsEnum)
            {
                case ProjectsEnum.DealsEgDotNet:
                <DealsEgDotNet SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.GamesWebsite:
                <GamesWebsite SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.MarketDotNet:
                <MarketDotNet SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.MatricesBuilder:
                <MatricesBuilder SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.MediaCenterDotNet:
                <MediaCenterDotNet SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.NewsApp:
                <NewsApp SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.Obscura:
                <Obscura SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.Paint:
                <Paint SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.PyramidsOpengl:
                <PyramidsOpengl SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.SecurityPackage:
                <SecurityPackage SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.WinXp:
                <WinXp SendCount="ReceiveCount" Idx="Idx" />
                break;

                case ProjectsEnum.NatigaEmt7an:
                <NatigaEmt7an SendCount="ReceiveCount" Idx="Idx" />
                break;
            }
        </div>
        <button disabled="@(this.Count == null || this.Count.Value - 1 == Idx)" @onclick="() => Next()" class="move-btn fa fa-arrow-right"></button>

    </div>

</div>

<style>

    /* Modal Overlay */
    .modal-overlay {
        display: flex;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(1px);
        z-index: 9999;
        justify-content: center;
        align-items: center;
    }

    .modal-window {
        background: #1c3d41;
        padding: 0px 0px;
        border: solid 2px white;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
    }

        .modal-window h2 {
            margin-top: 0;
            font-size: 24px;
            color: white;
        }

        .modal-window p {
            font-size: 16px;
            color: white;
            margin: 10px 0;
        }

        .modal-window img {
            width: 100%;
            object-fit:contain;
        }

        .modal-window .move-btn {
            width: 110px;
            background-color: #00000091;
            color: white;
            font-size: 28px;
            font-weight: 100;
            border: none;
            text-decoration: none;
        }

            .modal-window .move-btn:hover {
                background-color: #000000ba;
            }

            .modal-window .move-btn:disabled {
                cursor: auto;
                content: none;
                color:red;
            }
        .modal-window .content {
            width: 0px;
            height: 0px;
            z-index:0;
            opacity: 0;
            visibility: hidden; /* Hide the element */
            padding: 0px;
            transform: scale(0.9);
            transition: opacity 0.5s ease ,transform 0.5s ease; /* Delay visibility after transition */
        }

            .modal-window .content.contentActive {
                max-height:100vh;
                overflow-y:auto;
                height: 100%;
                width:100%;
                padding: 20px;
                opacity: 1;
                visibility: visible; /* Show the element */
                transform: scale(1);
                transition: opacity 0.5s ease ,transform 0.5s ease; /* Delay visibility after transition */
            }

            .closeicon {
                width:50px;
                font-size:40px;
                float:right;
                margin-top:10px;
            }

            .closeicon:hover {
                    color: #1b6ec2;
                    cursor:pointer;
            }
</style>